import { css } from '@emotion/react';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
function getCodeStyles(theme) {
  return css({
    "code, pre, kbd, samp": __spreadProps(__spreadValues({}, theme.typography.code), {
      fontSize: theme.typography.bodySmall.fontSize,
      backgroundColor: theme.colors.background.primary,
      color: theme.colors.text.primary,
      border: `1px solid ${theme.colors.border.medium}`,
      borderRadius: "4px"
    }),
    code: {
      whiteSpace: "nowrap",
      padding: "2px 5px",
      margin: "0 2px"
    },
    pre: {
      display: "block",
      margin: `0 0 ${theme.typography.body.lineHeight}`,
      lineHeight: theme.typography.body.lineHeight,
      wordBreak: "break-all",
      wordWrap: "break-word",
      whiteSpace: "pre-wrap",
      overflow: "auto",
      padding: "10px",
      code: {
        padding: 0,
        color: "inherit",
        whiteSpace: "pre-wrap",
        backgroundColor: "transparent",
        border: 0
      }
    }
  });
}

export { getCodeStyles };
//# sourceMappingURL=code.js.map
