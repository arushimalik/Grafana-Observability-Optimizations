{"version":3,"file":"AutoSizeInput.js","sources":["../../../../src/components/Input/AutoSizeInput.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport * as React from 'react';\n\nimport { measureText } from '../../utils/measureText';\n\nimport { Input, Props as InputProps } from './Input';\n\nexport interface Props extends InputProps {\n  /** Sets the min-width to a multiple of 8px. Default value is 10*/\n  minWidth?: number;\n  /** Sets the max-width to a multiple of 8px.*/\n  maxWidth?: number;\n  /** onChange function that will be run on onBlur and onKeyPress with enter*/\n  onCommitChange?: (event: React.FormEvent<HTMLInputElement>) => void;\n}\n\nexport const AutoSizeInput = React.forwardRef<HTMLInputElement, Props>((props, ref) => {\n  const {\n    defaultValue = '',\n    minWidth = 10,\n    maxWidth,\n    onCommitChange,\n    onKeyDown,\n    onBlur,\n    value: controlledValue,\n    ...restProps\n  } = props;\n\n  // Initialize internal state\n  const [value, setValue] = React.useState(controlledValue ?? defaultValue);\n  const [inputWidth, setInputWidth] = React.useState(minWidth);\n\n  // Update internal state when controlled `value` prop changes\n  useEffect(() => {\n    if (controlledValue !== undefined) {\n      setValue(controlledValue);\n    }\n  }, [controlledValue]);\n\n  // Update input width when `value`, `minWidth`, or `maxWidth` change\n  useEffect(() => {\n    setInputWidth(getWidthFor(value.toString(), minWidth, maxWidth));\n  }, [value, minWidth, maxWidth]);\n\n  return (\n    <Input\n      {...restProps}\n      ref={ref}\n      value={value.toString()}\n      onChange={(event) => {\n        setValue(event.currentTarget.value);\n      }}\n      width={inputWidth}\n      onBlur={(event) => {\n        if (onBlur) {\n          onBlur(event);\n        } else if (onCommitChange) {\n          onCommitChange(event);\n        }\n      }}\n      onKeyDown={(event) => {\n        if (onKeyDown) {\n          onKeyDown(event);\n        } else if (event.key === 'Enter' && onCommitChange) {\n          onCommitChange(event);\n        }\n      }}\n      data-testid={'autosize-input'}\n    />\n  );\n});\n\nfunction getWidthFor(value: string, minWidth: number, maxWidth: number | undefined): number {\n  if (!value) {\n    return minWidth;\n  }\n\n  const extraSpace = 3;\n  const realWidth = measureText(value.toString(), 14).width / 8 + extraSpace;\n\n  if (minWidth && realWidth < minWidth) {\n    return minWidth;\n  }\n\n  if (maxWidth && realWidth > maxWidth) {\n    return maxWidth;\n  }\n\n  return realWidth;\n}\n\nAutoSizeInput.displayName = 'AutoSizeInput';\n"],"names":[],"mappings":"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"}