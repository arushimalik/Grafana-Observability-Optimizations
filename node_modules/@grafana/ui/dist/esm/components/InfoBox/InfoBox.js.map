{"version":3,"file":"InfoBox.js","sources":["../../../../src/components/InfoBox/InfoBox.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Alert, AlertVariant } from '../Alert/Alert';\nimport { Icon } from '../Icon/Icon';\n\nexport interface InfoBoxProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'title'> {\n  children: React.ReactNode;\n  /** Title of the box */\n  title?: string | JSX.Element;\n  /** Url of the read more link */\n  url?: string;\n  /** Text of the read more link */\n  urlTitle?: string;\n  /** Indicates whether or not box should be rendered with Grafana branding background */\n  branded?: boolean;\n  /** Color variant of the box */\n  severity?: AlertVariant;\n  /** Call back to be performed when box is dismissed */\n  onDismiss?: () => void;\n}\n\n/** @deprecated use Alert with severity info */\nexport const InfoBox = React.memo(\n  React.forwardRef<HTMLDivElement, InfoBoxProps>(\n    ({ title, className, children, branded, url, urlTitle, onDismiss, severity = 'info', ...otherProps }, ref) => {\n      const styles = useStyles2(getStyles);\n\n      return (\n        <Alert severity={severity} className={className} {...otherProps} ref={ref} title={title as string}>\n          <div>{children}</div>\n          {url && (\n            <a href={url} className={cx('external-link', styles.docsLink)} target=\"_blank\" rel=\"noreferrer\">\n              <Icon name=\"book\" /> {urlTitle || 'Read more'}\n            </a>\n          )}\n        </Alert>\n      );\n    }\n  )\n);\n\nInfoBox.displayName = 'InfoBox';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  docsLink: css({\n    display: 'inline-block',\n    marginTop: theme.spacing(2),\n  }),\n});\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BO,MAAM,UAAU,KAAM,CAAA,IAAA;AAAA,EAC3B,KAAM,CAAA,UAAA;AAAA,IACJ,CAAC,IAAqG,GAAQ,KAAA;AAA7G,MAAE,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAO,WAAW,QAAU,EAAA,OAAA,EAAS,KAAK,QAAU,EAAA,SAAA,EAAW,WAAW,MA5BjF,EAAA,GA4BK,IAAuF,UAAvF,GAAA,SAAA,CAAA,EAAA,EAAuF,CAArF,OAAO,EAAA,WAAA,EAAW,YAAU,SAAS,EAAA,KAAA,EAAK,YAAU,WAAW,EAAA,UAAA,CAAA,CAAA,CAAA;AAChE,MAAM,MAAA,MAAA,GAAS,WAAW,SAAS,CAAA,CAAA;AAEnC,MAAA,4BACG,KAAM,EAAA,aAAA,CAAA,cAAA,CAAA,EAAA,QAAA,EAAoB,aAA0B,UAApD,CAAA,EAAA,EAAgE,KAAU,KACzE,EAAA,QAAA,EAAA;AAAA,wBAAA,GAAA,CAAC,SAAK,QAAS,EAAA,CAAA;AAAA,QACd,GACC,oBAAA,IAAA,CAAC,GAAE,EAAA,EAAA,IAAA,EAAM,KAAK,SAAW,EAAA,EAAA,CAAG,eAAiB,EAAA,MAAA,CAAO,QAAQ,CAAA,EAAG,MAAO,EAAA,QAAA,EAAS,KAAI,YACjF,EAAA,QAAA,EAAA;AAAA,0BAAC,GAAA,CAAA,IAAA,EAAA,EAAK,MAAK,MAAO,EAAA,CAAA;AAAA,UAAE,GAAA;AAAA,UAAE,QAAY,IAAA,WAAA;AAAA,SACpC,EAAA,CAAA;AAAA,OAEJ,EAAA,CAAA,CAAA,CAAA;AAAA,KAEJ;AAAA,GACF;AACF,EAAA;AAEA,OAAA,CAAQ,WAAc,GAAA,SAAA,CAAA;AAEtB,MAAM,SAAA,GAAY,CAAC,KAA0B,MAAA;AAAA,EAC3C,UAAU,GAAI,CAAA;AAAA,IACZ,OAAS,EAAA,cAAA;AAAA,IACT,SAAA,EAAW,KAAM,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,GAC3B,CAAA;AACH,CAAA,CAAA;;;;"}