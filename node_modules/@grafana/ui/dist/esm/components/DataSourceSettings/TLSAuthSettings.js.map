{"version":3,"file":"TLSAuthSettings.js","sources":["../../../../src/components/DataSourceSettings/TLSAuthSettings.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport * as React from 'react';\n\nimport { KeyValue } from '@grafana/data';\n\nimport { FormField } from '../FormField/FormField';\nimport { Icon } from '../Icon/Icon';\nimport { Tooltip } from '../Tooltip/Tooltip';\n\nimport { CertificationKey } from './CertificationKey';\nimport { HttpSettingsBaseProps } from './types';\n\nexport const TLSAuthSettings = ({ dataSourceConfig, onChange }: HttpSettingsBaseProps) => {\n  const hasTLSCACert = dataSourceConfig.secureJsonFields && dataSourceConfig.secureJsonFields.tlsCACert;\n  const hasTLSClientCert = dataSourceConfig.secureJsonFields && dataSourceConfig.secureJsonFields.tlsClientCert;\n  const hasTLSClientKey = dataSourceConfig.secureJsonFields && dataSourceConfig.secureJsonFields.tlsClientKey;\n  const hasServerName = dataSourceConfig.jsonData && dataSourceConfig.jsonData.serverName;\n\n  const onResetClickFactory = (field: string) => (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    const newSecureJsonFields: KeyValue<boolean> = { ...dataSourceConfig.secureJsonFields };\n    newSecureJsonFields[field] = false;\n    onChange({\n      ...dataSourceConfig,\n      secureJsonFields: newSecureJsonFields,\n    });\n  };\n\n  const onCertificateChangeFactory = (field: string) => (event: React.SyntheticEvent<HTMLTextAreaElement>) => {\n    const newSecureJsonData = { ...dataSourceConfig.secureJsonData };\n    newSecureJsonData[field] = event.currentTarget.value;\n\n    onChange({\n      ...dataSourceConfig,\n      secureJsonData: newSecureJsonData,\n    });\n  };\n\n  const onServerNameLabelChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    const newJsonData = {\n      ...dataSourceConfig.jsonData,\n      serverName: event.currentTarget.value,\n    };\n\n    onChange({\n      ...dataSourceConfig,\n      jsonData: newJsonData,\n    });\n  };\n\n  return (\n    <div className=\"gf-form-group\">\n      <div\n        className={cx(\n          'gf-form',\n          css({\n            alignItems: 'baseline',\n          })\n        )}\n      >\n        <h6>TLS/SSL Auth Details</h6>\n        <Tooltip\n          placement=\"right-end\"\n          content=\"TLS/SSL Certs are encrypted and stored in the Grafana database.\"\n          theme=\"info\"\n        >\n          <Icon name=\"info-circle\" size=\"xs\" style={{ marginLeft: '10px' }} />\n        </Tooltip>\n      </div>\n      <div>\n        {dataSourceConfig.jsonData.tlsAuthWithCACert && (\n          <CertificationKey\n            hasCert={!!hasTLSCACert}\n            onChange={onCertificateChangeFactory('tlsCACert')}\n            placeholder=\"Begins with -----BEGIN CERTIFICATE-----\"\n            label=\"CA Cert\"\n            onClick={onResetClickFactory('tlsCACert')}\n          />\n        )}\n\n        {dataSourceConfig.jsonData.tlsAuth && (\n          <>\n            <div className=\"gf-form\">\n              <FormField\n                label=\"ServerName\"\n                labelWidth={7}\n                inputWidth={30}\n                placeholder=\"domain.example.com\"\n                value={hasServerName && dataSourceConfig.jsonData.serverName}\n                onChange={onServerNameLabelChange}\n              />\n            </div>\n            <CertificationKey\n              hasCert={!!hasTLSClientCert}\n              label=\"Client Cert\"\n              onChange={onCertificateChangeFactory('tlsClientCert')}\n              placeholder=\"Begins with -----BEGIN CERTIFICATE-----\"\n              onClick={onResetClickFactory('tlsClientCert')}\n            />\n\n            <CertificationKey\n              hasCert={!!hasTLSClientKey}\n              label=\"Client Key\"\n              placeholder=\"Begins with -----BEGIN RSA PRIVATE KEY-----\"\n              onChange={onCertificateChangeFactory('tlsClientKey')}\n              onClick={onResetClickFactory('tlsClientKey')}\n            />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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"}