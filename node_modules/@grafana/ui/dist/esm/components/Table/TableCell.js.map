{"version":3,"file":"TableCell.js","sources":["../../../../src/components/Table/TableCell.tsx"],"sourcesContent":["import { Cell } from 'react-table';\n\nimport { TimeRange, DataFrame } from '@grafana/data';\n\nimport { TableStyles } from './styles';\nimport { GrafanaTableColumn, TableFilterActionCallback } from './types';\n\nexport interface Props {\n  cell: Cell;\n  tableStyles: TableStyles;\n  onCellFilterAdded?: TableFilterActionCallback;\n  columnIndex: number;\n  columnCount: number;\n  timeRange?: TimeRange;\n  userProps?: object;\n  frame: DataFrame;\n  rowStyled?: boolean;\n  rowExpanded?: boolean;\n  textWrapped?: boolean;\n  height?: number;\n}\n\nexport const TableCell = ({\n  cell,\n  tableStyles,\n  onCellFilterAdded,\n  timeRange,\n  userProps,\n  frame,\n  rowStyled,\n  rowExpanded,\n  textWrapped,\n  height,\n}: Props) => {\n  const cellProps = cell.getCellProps();\n  const field = (cell.column as unknown as GrafanaTableColumn).field;\n\n  if (!field?.display) {\n    return null;\n  }\n\n  if (cellProps.style) {\n    cellProps.style.minWidth = cellProps.style.width;\n    const justifyContent = (cell.column as any).justifyContent;\n\n    if (justifyContent === 'flex-end' && !field.config.unit) {\n      // justify-content flex-end is not compatible with cellLink overflow; use direction instead\n      cellProps.style.textAlign = 'right';\n      cellProps.style.direction = 'rtl';\n      cellProps.style.unicodeBidi = 'plaintext';\n    } else {\n      cellProps.style.justifyContent = justifyContent;\n    }\n  }\n\n  let innerWidth = (typeof cell.column.width === 'number' ? cell.column.width : 24) - tableStyles.cellPadding * 2;\n\n  return (\n    <>\n      {cell.render('Cell', {\n        field,\n        tableStyles,\n        onCellFilterAdded,\n        cellProps,\n        innerWidth,\n        timeRange,\n        userProps,\n        frame,\n        rowStyled,\n        rowExpanded,\n        textWrapped,\n        height,\n      })}\n    </>\n  );\n};\n"],"names":[],"mappings":";;AAsBO,MAAM,YAAY,CAAC;AAAA,EACxB,IAAA;AAAA,EACA,WAAA;AAAA,EACA,iBAAA;AAAA,EACA,SAAA;AAAA,EACA,SAAA;AAAA,EACA,KAAA;AAAA,EACA,SAAA;AAAA,EACA,WAAA;AAAA,EACA,WAAA;AAAA,EACA,MAAA;AACF,CAAa,KAAA;AACX,EAAM,MAAA,SAAA,GAAY,KAAK,YAAa,EAAA,CAAA;AACpC,EAAM,MAAA,KAAA,GAAS,KAAK,MAAyC,CAAA,KAAA,CAAA;AAE7D,EAAI,IAAA,EAAC,+BAAO,OAAS,CAAA,EAAA;AACnB,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAEA,EAAA,IAAI,UAAU,KAAO,EAAA;AACnB,IAAU,SAAA,CAAA,KAAA,CAAM,QAAW,GAAA,SAAA,CAAU,KAAM,CAAA,KAAA,CAAA;AAC3C,IAAM,MAAA,cAAA,GAAkB,KAAK,MAAe,CAAA,cAAA,CAAA;AAE5C,IAAA,IAAI,cAAmB,KAAA,UAAA,IAAc,CAAC,KAAA,CAAM,OAAO,IAAM,EAAA;AAEvD,MAAA,SAAA,CAAU,MAAM,SAAY,GAAA,OAAA,CAAA;AAC5B,MAAA,SAAA,CAAU,MAAM,SAAY,GAAA,KAAA,CAAA;AAC5B,MAAA,SAAA,CAAU,MAAM,WAAc,GAAA,WAAA,CAAA;AAAA,KACzB,MAAA;AACL,MAAA,SAAA,CAAU,MAAM,cAAiB,GAAA,cAAA,CAAA;AAAA,KACnC;AAAA,GACF;AAEA,EAAI,IAAA,UAAA,GAAA,CAAc,OAAO,IAAA,CAAK,MAAO,CAAA,KAAA,KAAU,QAAW,GAAA,IAAA,CAAK,MAAO,CAAA,KAAA,GAAQ,EAAM,IAAA,WAAA,CAAY,WAAc,GAAA,CAAA,CAAA;AAE9G,EACE,uBAAA,GAAA,CAAA,QAAA,EAAA,EACG,QAAK,EAAA,IAAA,CAAA,MAAA,CAAO,MAAQ,EAAA;AAAA,IACnB,KAAA;AAAA,IACA,WAAA;AAAA,IACA,iBAAA;AAAA,IACA,SAAA;AAAA,IACA,UAAA;AAAA,IACA,SAAA;AAAA,IACA,SAAA;AAAA,IACA,KAAA;AAAA,IACA,SAAA;AAAA,IACA,WAAA;AAAA,IACA,WAAA;AAAA,IACA,MAAA;AAAA,GACD,CACH,EAAA,CAAA,CAAA;AAEJ;;;;"}