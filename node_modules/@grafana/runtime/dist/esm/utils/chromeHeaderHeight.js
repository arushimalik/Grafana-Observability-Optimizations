let chromeHeaderHeightHook = void 0;
const setChromeHeaderHeightHook = (hook) => {
  chromeHeaderHeightHook = hook;
};
const useChromeHeaderHeight = () => {
  if (!chromeHeaderHeightHook) {
    if (process.env.NODE_ENV !== "production") {
      throw new Error("useChromeHeaderHeight hook not found in @grafana/runtime");
    }
    console.error("useChromeHeaderHeight hook not found");
  }
  return chromeHeaderHeightHook == null ? void 0 : chromeHeaderHeightHook();
};

export { setChromeHeaderHeightHook, useChromeHeaderHeight };
//# sourceMappingURL=chromeHeaderHeight.js.map
