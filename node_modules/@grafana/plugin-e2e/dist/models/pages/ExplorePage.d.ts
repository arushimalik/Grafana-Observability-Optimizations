import { Locator } from '@playwright/test';
import { GrafanaPageArgs, NavigateOptions, PluginTestCtx, RequestOptions } from '../../types';
import { DataSourcePicker } from '../components/DataSourcePicker';
import { GrafanaPage } from './GrafanaPage';
import { Panel } from '../components/Panel';
export declare class ExplorePage extends GrafanaPage {
    readonly args?: GrafanaPageArgs | undefined;
    datasource: DataSourcePicker;
    timeRange: any;
    timeSeriesPanel: Panel;
    tablePanel: Panel;
    constructor(ctx: PluginTestCtx, args?: GrafanaPageArgs | undefined);
    private getPanelLocators;
    /**
     * Navigates to the explore page.
     */
    goto(options?: NavigateOptions): Promise<void>;
    /**
     * Returns the locator for the query editor row with the given refId
     */
    getQueryEditorRow(refId: string): Locator;
    /**
     * Clicks the "Run Query" button in the refresh picker to run the query. Returns the response promise for the data query
     */
    runQuery(options?: RequestOptions): Promise<import("@playwright/test").Response>;
}
